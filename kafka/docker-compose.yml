version: '3.8'

networks:
  backend:
    external: true

services:
  kafka-zookeeper:
    build:
      context: ./zookeeper
      args:
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
    container_name: ${ZOOKEEPER_CONTAINER_NAME}
    hostname: ${ZOOKEEPER_CONTAINER_NAME}
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    volumes:
      - ${ZOOKEEPER_PATH}/data:/data
      - ${ZOOKEEPER_PATH}/datalog:/datalog
    environment:
      - ZOO_MY_ID=${ZOOKEEPER_ID}
      - ZOO_SERVERS=${ZOOKEEPER_SERVERS}
      - TZ=${TZ}
    networks:
      backend:
        ipv4_address: ${KAFKA_ZOOKEEPER_IP}

  kafka:
    build:
      context: ./kafka
      args:
        KAFKA_VERSION: ${KAFKA_VERSION}
    container_name: ${KAFKA_CONTAINER_NAME}
    hostname: ${KAFKA_CONTAINER_NAME}
    privileged: true
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - TZ=${TZ}
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://localhost:9092,EXTERNAL://${KAFKA_CONTAINER_NAME}:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
    volumes:
      - ${KAFKA_PATH}/data:/bitnami/kafka
    depends_on:
      - ${ZOOKEEPER_CONTAINER_NAME}
    networks:
      backend:
        ipv4_address: ${KAFKA_IP}

  kafka-eagle:
    build:
      context: ./kafka-eagle
      args:
        KAFKA_EFAK_VERSION: ${KAFKA_EFAK_VERSION}
    container_name: kafka-eagle
    hostname: kafka-eagle
    volumes:
      - ${KAFKA_EFAK_PATH}/system-config.properties:/opt/efak/conf/system-config.properties
    environment:
      - TZ=${TZ}
      - EFAK_CLUSTER_ZK_LIST=${KAFKA_ZOOKEEPER_CONNECT}
    depends_on:
      - ${ZOOKEEPER_CONTAINER_NAME}
    ports:
      - "8048:8048"
    networks:
      backend:
        ipv4_address: ${KAFKA_EFAK_IP}