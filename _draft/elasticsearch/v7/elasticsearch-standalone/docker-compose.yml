version: '3.8'

networks:
  es-v7-standalone-network:
    driver: bridge

services:
  elasticsearch-v7:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch-v7
    hostname: elasticsearch-v7
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - "./elasticsearch/data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - es-v7-standalone-network

  logstash-v7:
    build:
      context: ./logstash
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: logstash-v7
    hostname: logstash-v7
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - es-v7-standalone-network
    depends_on:
      - elasticsearch-v7

  kibana-v7:
    build:
      context: ./kibana
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: kibana-v7
    hostname: kibana-v7
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - es-v7-standalone-network
    depends_on:
      - elasticsearch-v7

  filebeat-v7:
    build:
      context: ./filebeat
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: filebeat-v7
    hostname: filebeat-v7
    privileged: true
    user: root # 必须为root
    environment:
      - strict.perms=false
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      # 映射到容器中[作为数据源]
      - ./filebeat/logs:/usr/share/filebeat/logs:rw
      - ./filebeat/data:/usr/share/filebeat/data:rw
      - ./filebeat/modules.d:/usr/share/filebeat/modules.d:rw
    networks:
      - es-v7-standalone-network
    depends_on:
      - elasticsearch-v7

  elasticsearch-head-v7:
    build:
      context: ./elasticsearch-head
    container_name: elasticsearch-head-v7
    hostname: elasticsearch-head-v7
    privileged: true
    ports:
      - "9100:9100"
    depends_on:
      - elasticsearch-v7
    networks:
      - es-v7-standalone-network

  graylog:
    build: ./graylog
    environment:
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD}
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_SHA256_PASSWORD}
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:${GRAYLOG_PORT}/
    depends_on:
      - elasticsearch-v7
    ports:
      # Graylog web interface and REST API
      - ${GRAYLOG_PORT}:9000
      # Syslog TCP
      - ${GRAYLOG_SYSLOG_TCP_PORT}:514
      # Syslog UDP
      - ${GRAYLOG_SYSLOG_UDP_PORT}:514/udp
      # GELF TCP
      - ${GRAYLOG_GELF_TCP_PORT}:12201
      # GELF UDP
      - ${GRAYLOG_GELF_UDP_PORT}:12201/udp
    user: graylog
    volumes:
      - ./graylog/data:/usr/share/graylog/data
    networks:
      - es-v7-standalone-network