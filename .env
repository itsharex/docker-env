###########################################################
###################### General Setup ######################
###########################################################

### Drivers ################################################

# All volumes driver
VOLUMES_DRIVER=local

# All Networks driver
NETWORKS_DRIVER=bridge

# Docker Frontend Network ################################################
FRONTEND_NETWORK_NAME=zz-frontend
FRONTEND_SUBNET_PREFIX=172.19.140
FRONTEND_SUBNET=172.19.140.0/24
FRONTEND_SUBNET_GATEWAY=172.19.140.1

# Docker Backend Network ################################################
BACKEND_NETWORK_NAME=zz-backend
BACKEND_SUBNET_PREFIX=172.19.150
BACKEND_SUBNET=172.19.150.0/24
BACKEND_SUBNET_GATEWAY=172.19.150.1

# Point to the path of your applications code on your host
APP_CODE_PATH_HOST=../

# Point to where the `APP_CODE_PATH_HOST` should be in the container
APP_CODE_PATH_CONTAINER=/var/www

# You may add flags to the path `:cached`, `:delegated`. When using Docker Sync add `:nocopy`
APP_CODE_CONTAINER_FLAG=:cached

# Choose storage path on your machine. For all storage systems
DATA_PATH_HOST=~/.docker-env/data

# 本机 docker.sock 路径
DOCKER_SOCK_HOST=/var/run/docker.sock

### Docker compose files ##################################

# Select which docker-compose files to include. If using docker-sync append `:docker-compose.sync.yml` at the end
COMPOSE_FILE=docker-compose.yml

# Change the separator from : to ; on Windows
COMPOSE_PATH_SEPARATOR=:

# Define the prefix of container names. This is useful if you have multiple projects that use laradock to have separate containers per project.
COMPOSE_PROJECT_NAME=laradock

# 时间同步 ################################################
DO_TIME_SYNC=true

### Busybox ###############################################
BUSYBOX_CONTAINER_NAME=busybox
BUSYBOX_HOSTNAME=busybox
BUSYBOX_FRONTEND_IP=172.19.140.3
BUSYBOX_BACKEND_IP=172.19.150.3
BUSYBOX_VERSION=latest

### Gitlab ###############################################

GITLAB_VERSION=latest
GITLAB_CONTAINER_NAME=gitlab
GITLAB_DOMAIN_NAME=http://localhost
GITLAB_ROOT_PASSWORD=RootPassword!
GITLAB_HOSTNAME=zz.gitlab.com
GITLAB_HOST_HTTP_PORT=8989
GITLAB_HOST_HTTPS_PORT=9898
GITLAB_HOST_SSH_PORT=2289
GITLAB_HOST_LOG_PATH=./logs/gitlab
GITLAB_FRONTEND_IP=172.19.140.5
GITLAB_BACKEND_IP=172.19.150.5

### GITLAB-RUNNER ###############################################

GITLAB_CI_SERVER_URL=http://localhost:8989
GITLAB_RUNNER_REGISTRATION_TOKEN="<my-registration-token>"
GITLAB_REGISTER_NON_INTERACTIVE=true

### Jenkins ###############################################

JENKINS_HOST_HTTP_PORT=8090
JENKINS_HOST_SLAVE_AGENT_PORT=50000
JENKINS_CONTAINER_NAME=jenkins
JENKINS_HOSTNAME=jenkins
JENKINS_HOME=jenkins_home
JENKINS_FRONTEND_IP=172.19.140.6
JENKINS_BACKEND_IP=172.19.150.6
JENKINS_ADD_DOCKER_SOURCES=false
JENKINS_REPLACE_SOURCES=true
JENKINS_SOURCES_LIST_HOST=../../configs/sources/qinghua/debian-bullseye/sources.list
JENKINS_VERSION=lts

### MYSQL #################################################

MYSQL_VERSION=latest
MYSQL_DATABASE=default
MYSQL_USER=default
MYSQL_PASSWORD=secret
MYSQL_PORT=3306
MYSQL_ROOT_PASSWORD=root
MYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d

### REDIS #################################################

REDIS_PORT=6379
REDIS_PASSWORD=secret_redis

### MEMCACHED #############################################

MEMCACHED_HOST_PORT=11211

### BEANSTALKD CONSOLE ####################################

BEANSTALKD_CONSOLE_BUILD_PATH=./beanstalkd-console
BEANSTALKD_CONSOLE_CONTAINER_NAME=beanstalkd-console
BEANSTALKD_CONSOLE_HOST_PORT=2080

### BEANSTALKD ############################################

BEANSTALKD_HOST_PORT=11300

### RABBITMQ ##############################################

RABBITMQ_NODE_HOST_PORT=5672
RABBITMQ_MANAGEMENT_HTTP_HOST_PORT=15672
RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT=15671
RABBITMQ_WEB_STOMP_HOST_PORT=15674

### NATS ##################################################

NATS_CLIENT_PORT=4222
NATS_MONITORING_PORT=6222
NATS_ROUTE_PORT=8222

### SOKETI ##################################################

SOKETI_PORT=6001
SOKETI_METRICS_SERVER_PORT=9601

### POSTGRES ##############################################

POSTGRES_VERSION=alpine
POSTGRES_CLIENT_VERSION=15
POSTGRES_DB=default
POSTGRES_USER=default
POSTGRES_PASSWORD=secret
POSTGRES_PORT=5432
POSTGRES_ENTRYPOINT_INITDB=./postgres/docker-entrypoint-initdb.d

### POSTGRES-POSTGIS ##############################################

POSTGIS_VERSION=latest
POSTGIS_INSTALL_PGSQL_HTTP_FOR_POSTGIS13=false

### ELASTICSEARCH #########################################

ELASTICSEARCH_HOST_HTTP_PORT=9200
ELASTICSEARCH_HOST_TRANSPORT_PORT=9300

### KIBANA ################################################

KIBANA_HTTP_PORT=5601

### MINIO #################################################

MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001
MINIO_ROOT_USER=laradock
MINIO_ROOT_PASSWORD=laradock

### MONGODB ###############################################

MONGODB_PORT=27017
MONGO_USERNAME=root
MONGO_PASSWORD=example

### CADDY #################################################

CADDY_HOST_HTTP_PORT=80
CADDY_HOST_HTTPS_PORT=443
CADDY_HOST_LOG_PATH=./logs/caddy
CADDY_CONFIG_PATH=./caddy/caddy

### JUPYTERHUB ###############################################

JUPYTERHUB_POSTGRES_INIT=true
JUPYTERHUB_POSTGRES_HOST=postgres
JUPYTERHUB_POSTGRES_USER=laradock_jupyterhub
JUPYTERHUB_POSTGRES_PASSWORD=laradock_jupyterhub
JUPYTERHUB_POSTGRES_DB=laradock_jupyterhub
JUPYTERHUB_PORT=9991
JUPYTERHUB_OAUTH_CALLBACK_URL=http://laradock:9991/hub/oauth_callback
JUPYTERHUB_OAUTH_CLIENT_ID={GITHUB_CLIENT_ID}
JUPYTERHUB_OAUTH_CLIENT_SECRET={GITHUB_CLIENT_SECRET}
JUPYTERHUB_CUSTOM_CONFIG=./jupyterhub/jupyterhub_config.py
JUPYTERHUB_USER_DATA=/jupyterhub
JUPYTERHUB_USER_LIST=./jupyterhub/userlist
JUPYTERHUB_ENABLE_NVIDIA=false

### IPYTHON ##################################################

LARADOCK_IPYTHON_CONTROLLER_IP=127.0.0.1

### REDISWEBUI #########################################

REDIS_WEBUI_USERNAME=laradock
REDIS_WEBUI_PASSWORD=laradock
REDIS_WEBUI_CONNECT_HOST=redis
REDIS_WEBUI_CONNECT_PORT=6379
REDIS_WEBUI_PORT=9987

### MONGOWEBUI ###############################################

MONGO_WEBUI_PORT=3000
MONGO_WEBUI_ROOT_URL=http://localhost
MONGO_WEBUI_MONGO_URL=mongodb://mongo:27017/
MONGO_WEBUI_INSTALL_MONGO=false

### TRAEFIK #################################################

TRAEFIK_HOST_HTTP_PORT=80
TRAEFIK_HOST_HTTPS_PORT=443
TRAEFIK_DASHBOARD_PORT=8888
# basic authentication for traefik dashboard username: admin password:admin
TRAEFIK_DASHBOARD_USER='admin:$2y$10$lXaL3lj6raFic6rFqr2.lOBoCudAIhB6zyoqObNg290UFppiUzTTi'
ACME_DOMAIN=example.org
ACME_EMAIL=email@example.org

### pgadmin ##################################################
# use this address http://ip6-localhost:5050
PGADMIN_PORT=5050
PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
PGADMIN_DEFAULT_PASSWORD=admin

### SONARQUBE ################################################
## docker-compose up -d sonarqube
## (If you encounter a database error)
## docker-compose exec --user=root postgres
## source docker-entrypoint-initdb.d/init_sonarqube_db.sh
## (If you encounter logs error)
## docker-compose run --user=root --rm sonarqube chown sonarqube:sonarqube /opt/sonarqube/logs

SONARQUBE_HOSTNAME=sonar.example.com
SONARQUBE_PORT=9000
SONARQUBE_POSTGRES_INIT=true
SONARQUBE_POSTGRES_HOST=postgres
SONARQUBE_POSTGRES_DB=sonar
SONARQUBE_POSTGRES_USER=sonar
SONARQUBE_POSTGRES_PASSWORD=sonarPass

### TOMCAT ################################################
TOMCAT_VERSION=8.5.43
TOMCAT_HOST_HTTP_PORT=8080